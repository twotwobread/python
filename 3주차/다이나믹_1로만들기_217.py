# 1로 만들기
# 정수 X가 주어질 때 정수 X에 사용할 수 있는 연산은 4가지이다.
#   1. X가 5로 나누어떨어지면, 5로 나눈다.
#   2. X가 3으로 나누어떨어지면, 3으로 나눈다.
#   3. X가 2로 나누어떨어지면, 2로 나눈다.
#   4. X에서 1을 뺀다.
# 이 연산을 적절히 사용하여 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력
# 입력조건: X ( 1<=X<=30,000)
# 출력조건: 연산하는 횟수의 최솟값 출력
# 26      3
# 위에 연산할 수 있는 방법의 순서가 우선순위 순서라고 생각하면 된다.
# 5로 나누는게 가장 최대로 값을 작게 만들수있고 1이 가장 영향력이 적다.
# 18      3 (3으로 나누고 1로 빼고 5로 나누면 1이다.)
# 지금 수에서 가능한 연산을 다해보고 그 중에 가장 최소횟수를 가지는 루트를 저장을 한다.
x = int(input())

d = [0]*30001 # 앞서 계산된 결과를 저장하기 위한 DP 테이블초기화

for i in range(2, x+1): # 1이 되면 멈추기때문에 2~x까지를 의미한다.
    d[i] = d[i-1] + 1 # 현재의 수에서 1을 빼는 경우
    if i%2==0:
        d[i] = min(d[i], d[i//2]+1)
    if i%3==0:
        d[i] = min(d[i], d[i//3]+1)
    if i%5==0:
        d[i] = min(d[i], d[i//5]+1)

print(d[x])
